<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://unpkg.com/feather-icons"></script>
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #121212; /* Dark background */
            color: #ffffff; /* White text */
        }
        .btn-green, header {
            background-color: #14532d;
            color: #ffffff;
        }
        .btn-green:hover {
            background-color: #006941;
        }
        .input-dark {
            background-color: #1E1E1E;
            color: #ffffff;
        }
    </style>
</head>

<body class="min-h-screen">
    
    <div class="container mx-auto px-4">
        <header class="py-4">
            <nav class="flex justify-between items-center px-6">
                <div class="space-x-4"> 
                    <button class="bg-gray-800 text-white px-4 py-2 rounded-full">Home</button>
                    <button class="bg-gray-800 text-white px-4 py-2 rounded-full">Dashboard</button>
                    <button class="bg-gray-800 text-white px-4 py-2 rounded-full">Admin</button>
                </div>
                <div class="flex items-center space-x-4">
                    <i data-feather="bell" class="text-orange-500"></i>
                    <div class="w-8 h-8 bg-gray-500 rounded-full"></div>
                    <button class="bg-gray-800 text-white px-4 py-2 rounded-full">Profile</button>
                    <button class="bg-gray-800 text-white px-4 py-2 rounded-full">LogOut</button>
                </div>
            </nav>
        </header>

        <!-- ANNOUNCEMENT SECTION -->
        <hr class="border-gray-700 my-4">
        <main class="grid grid-cols-1 md:grid-cols-2 gap-8">
            <section>
                <h2 class="text-2xl font-bold mb-4">Announcements</h2>
                <div class="bg-gray-800 rounded-lg p-4 space-y-4" id="announcementsContainer">
                    <% if (announcements && announcements.length > 0) { %>
                        <% announcements.forEach(announcement => { %>
                            <div class="bg-gray-700 rounded p-2">
                                <strong><%= announcement.title %></strong>: <%= announcement.message %>
                                <br>
                                <small class="text-white">Posted on <%= new Date(announcement.created_at).toLocaleString() %></small>
                            </div>
                        <% }); %>
                    <% } else { %>
                        <p>No announcements yet.</p>
                    <% } %>

                    <!-- Announcement Modal -->
                    <div class="modal fade" id="announcementModal" tabindex="-1" aria-labelledby="announcementModalLabel" aria-hidden="true">
                        <div class="modal-dialog modal-dialog-centered">
                            <div class="modal-content bg-gray-800 text-white">
                                <div class="modal-header border-gray-700">
                                    <h5 class="modal-title" id="announcementModalLabel">New Announcement</h5>
                                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    <div class="mb-3">
                                        <label for="announcementTitle" class="form-label">Title</label>
                                        <input type="text" class="form-control bg-gray-700 text-black" id="announcementTitle" placeholder="Enter announcement title" required>
                                    </div>
                                    <div class="mb-3">
                                        <label for="announcementMessage" class="form-label">Message</label>
                                        <textarea id="announcementMessage" class="form-control bg-gray-700 text-black" placeholder="Type your announcement..." rows="4" required></textarea>
                                    </div>
                                </div>
                                <div class="modal-footer border-gray-700">
                                    <button type="button" id="submitAnnouncement" class="btn btn-success">Submit</button>
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Button to Open Modal -->
                    <button type="button" class="btn btn-dark" data-bs-toggle="modal" data-bs-target="#announcementModal">
                        <i data-feather="plus" class="w-6 h-6"></i>
                    </button>
                </div>
            </section>

            <section> <!--Calendar Section-->
                <h2 class="text-2xl font-bold mb-4">Schedule</h2>
                <div class="bg-gray-800 rounded-lg p-4">
                    <div id="calendar"></div>
                </div>
            </section>
        </main>
    </div>

    <!-- JavaScript for Announcements -->
    <script>
        // CALENDAR
    document.addEventListener('DOMContentLoaded', function() {
    const calendarEl = document.getElementById('calendar');
    const calendar = new FullCalendar.Calendar(calendarEl, {
        initialView: 'dayGridMonth',
        headerToolbar: {
            left: 'prev,next today',
            center: 'title',
            right: 'dayGridMonth,timeGridWeek,timeGridDay'
        },
        themeSystem: 'standard',
        height: 'auto',
        // Customize the calendar for dark theme
        eventColor: '#4F46E5', // Indigo color for events
        eventTextColor: '#ffffff',
        // Add some sample events
        events: [
            {
                title: 'Sample Event',
                start: new Date(),
                allDay: true
            }
        ],
        // Additional styling for dark mode
        dayCellClassNames: 'hover:bg-gray-700',
        dayHeaderClassNames: 'text-black',
        viewClassNames: 'text-gray-200'
    });
    calendar.render();
});
    document.addEventListener('DOMContentLoaded', function() {
        const submitButton = document.getElementById('submitAnnouncement');
        const titleInput = document.getElementById('announcementTitle');
        const messageInput = document.getElementById('announcementMessage');
        const modal = new bootstrap.Modal(document.getElementById('announcementModal'));

        submitButton.addEventListener('click', async function() {
            if (titleInput.value.trim() === '' || messageInput.value.trim() === '') {
                alert('Please fill out both the title and message fields.');
                return;
            }

            try {
                const response = await fetch('/announcements', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        title: titleInput.value,
                        message: messageInput.value,
                    }),
                });

                if (!response.ok) {
                    throw new Error('Failed to create announcement');
                    console.error(error)
                }

                const newAnnouncement = await response.json();

                // Clear the form and close the modal
                titleInput.value = '';
                messageInput.value = '';
                modal.hide();

                // Update UI dynamically
                const announcementsContainer = document.getElementById('announcementsContainer');
                const newAnnouncementElement = document.createElement('div');
                newAnnouncementElement.className = 'bg-gray-700 rounded p-2';
                newAnnouncementElement.innerHTML = `
                    <strong>${newAnnouncement.title}</strong>: ${newAnnouncement.message}
                    <br>
                    <small class="text-white">Posted on ${new Date(newAnnouncement.created_at).toLocaleString()}</small>
                `;
                announcementsContainer.insertBefore(newAnnouncementElement, announcementsContainer.firstChild);

            } catch (error) {
                console.error('Error:', error);
                alert('Failed to create announcement. Please try again.');
            }
        });
    });
    </script>

</body>
</html>
